{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelServices.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","resources/img/arrowup.png","components/onTop/OnTop.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","getResourse","url","a","fetch","res","ok","Error","json","getAllCharacters","num","_apiBase","_apiKey","data","results","map","_transformCaracter","getCharacter","id","name","length","slice","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","this","Spinner","props","style","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","error","alt","RandomChar","state","char","loading","marvelService","onCharLoaded","setState","onError","getData","Math","random","toFixed","then","catch","view","thumbnailClasses","errorMessage","loadMessage","content","onClick","mjolnir","Component","CharList","list","loadingButton","end","current","service","dataLoaded","clearInterval","interval","setInterval","console","log","increaseNum","onCharSelected","e","getList","i","push","selectedChar","ref","useRef","onKeyDown","code","tabIndex","gridColumn","Skeleton","CharInfo","scroll","top","getChar","charId","onLoaded","handleScroll","window","addEventListener","document","documentElement","scrollTop","comicsList","n","prevProps","prevState","skeleton","ErrorBoundary","errorInfo","children","OnTop","position","scrollUp","arrow","App","showRandom","buttonText","hiddenRandom","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b89587f.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"\">Characters</a></li>\n                    /\n                    <li><a href=\"\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\nclass MarvelService {\r\n    constructor(){\r\n        this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n        this._apiKey = 'apikey=392c73836d0c8248cd2f0fbad7c54735';\r\n    }\r\n    getResourse = async (url) => {\r\n        let res = await fetch(url)\r\n        if(!res.ok){\r\n            throw new Error (`Could not fetch ${url}`)\r\n        }\r\n        return await res.json(); \r\n    }\r\n\r\n    getAllCharacters = async (num) => {\r\n        let res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${num}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCaracter)\r\n    }\r\n    getCharacter = async(id) => {\r\n        let res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n        return this._transformCaracter(res.data.results[0])\r\n    }\r\n    _transformCaracter = (res) => {\r\n        return {name: res.name.length > 21 ? `${res.name.slice(0, 20)} ...` : res.name,\r\n                description: res.description,\r\n                thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n                homepage: res.urls[0].url,\r\n                wiki: res.urls[1].url,\r\n                id: res.id,\r\n                comics: res.comics.items,}\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = (props) => {\n    return (\n            <div style= {props.style}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" width={props.width}>\n                    <g transform=\"translate(80,50)\">\n                    <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                    <g transform=\"rotate(45)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(50,80)\">\n                    <g transform=\"rotate(90)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                    <g transform=\"rotate(135)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(20,50.00000000000001)\">\n                    <g transform=\"rotate(180)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                    <g transform=\"rotate(225)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(49.99999999999999,20)\">\n                    <g transform=\"rotate(270)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n                    </circle>\n                    </g>\n                    </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                    <g transform=\"rotate(315)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n                    </circle>\n                    </g>\n                    </g>\n                </svg>\n            </div>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif'\r\nlet ErrorMessage = () => {\r\n    return(\r\n        <img src = {error} alt='Error-img' style={{display: 'block', width: '250px', height: '250px', margin: '0 auto'}}/>\r\n    )\r\n}\r\nexport default ErrorMessage;","import { Component } from 'react/cjs/react.production.min';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nclass RandomChar extends Component{\n    state = {\n            char: {},\n            loading: true,\n            error: false,\n        }\n    marvelService = new MarvelService();\n    componentDidMount(){\n        this.getData();\n        // this.interval = setInterval(this.getData, 10000);\n    }\n    componentWillUnmount(){\n        // clearInterval(this.interval)\n    }\n    onCharLoaded = (res) => {\n        this.setState({\n            char: res,\n            loading: false,\n            error: false})\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n        this.getData();\n    }\n    getData = () => {\n        let id = (Math.random()*(1011400 - 1011000) + 1011000).toFixed(0)\n        this.marvelService.getCharacter(id)\n        .then(res => {\n            this.onCharLoaded(res)\n        \n        })\n        .catch(this.onError);\n    }\n    render(){\n        let {char, loading, error} = this.state;\n        let errorMessage = error ? <ErrorMessage/> : null;\n        let loadMessage = loading ? <Spinner/> : null;\n        let content = !(error || loading) ? this.view(char) : null\n        return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {loadMessage}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={this.getData}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\nview = (char) => {\n    let {name, description, thumbnail, homepage, wiki} = char;\n    if(!description){\n        description = 'There is no information about the character'\n    }else{\n        description = description.slice(0, 210) + '...'\n    }\n    let thumbnailClasses = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? (\"randomchar__img randomchar__img-notAvailable\") : \"randomchar__img\";\n    return (\n        <div className=\"randomchar__block\">\n                <img src={thumbnail} alt=\"Random character\" className= {thumbnailClasses}/>\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">\n                        {description}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href= {homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n    )  \n}\n}\n\nexport default RandomChar;","import React, { Component } from 'react/cjs/react.production.min';\nimport './charList.scss';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelServices';\nimport PropTypes from 'prop-types';\nclass CharList extends Component {\n    constructor(props){\n        super(props)\n    }\n    state = {\n        data: [],\n        list: [],\n        loading: true,\n        error: false,\n        num: 210,\n        loadingButton: false,\n        end: false,\n        id: null,\n        current: {}\n    }\n    service = new MarvelService();\n\n    getData = (num) => {\n        this.service.getAllCharacters(num)\n        .then(res => \n            {this.dataLoaded(res)\n            clearInterval(this.interval)\n            })\n        .catch(() => {\n            this.onError();\n        })\n    };\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n        this.interval = setInterval(this.getData(), 10000)   \n    }\n    dataLoaded = (res) => {\n        this.setState({ data: res,\n                        current: [...this.state.data, ...res],\n                        loading: false,\n                        error: false,\n                        loadingButton: false});\n                        console.log(this.state.current);\n    }\n    increaseNum = async() => {\n        await this.setState((state) => {\n            return ({num: state.num + 9,\n                    loadingButton: true})\n        })\n        this.getData(this.state.num);\n    }\n    onCharSelected = async (e, data) => {\n        this.props.onCharSelected(data);\n    }\n    getList = (res) => {\n        let list = []; \n        for(let i = 0; i < res.length; i++){\n            let className = \"char__item\";\n            if (res[i].thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n                className = \"char__item char__item-none\"\n            };\n            list.push(\n            <li className= {this.props.selectedChar === res[i].id ? (`${className} char__item_selected` ) : className}\n                key = {res[i].id}\n                ref = {this.useRef}\n                onClick={(e) => {this.onCharSelected(e, res[i].id)}} \n                onKeyDown={(e) => {\n                    if(e.code == 'Enter'){\n                       this.onCharSelected(e, res[i].id) \n                    }\n                }}\n                tabIndex={0}>\n                <img src={res[i].thumbnail} alt= {res[i].name}/>\n                <div className=\"char__name\">{res[i].name}</div>\n            </li>\n            )\n        }\n        return list;\n    }\n    componentDidMount(){\n        this.getData(this.state.num);\n    }\n    render(){\n        const {list, error, loading, loadingButton} = this.state;\n        let errorMessage = error ? <ErrorMessage/> : null;\n        let loadMessage = loading ? <Spinner style = {{gridColumn: '2/3'}}/> : null;\n        let content = !(error || loading) ? this.getList(this.state.current) : null\n        return (\n        <div className=\"char__list\">\n            <ul className=\"char__grid\">\n                {errorMessage}\n                {loadMessage}\n                {content}\n            </ul>\n            {loadingButton ? <Spinner width = '50px'/> : <button className=\"button button__main button__long\">\n                <div className=\"inner\" onClick={this.increaseNum}>load more</div>\n            </button>}\n            \n        </div>\n    )\n    }\n    \n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport {Component} from 'react';\nimport MarvelService from '../../services/MarvelServices';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton';\nimport PropTypes from 'prop-types';\nclass CharInfo extends Component{\n    constructor(props){\n        super(props)\n    }\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n        scroll: 0,\n        top: 0,\n    }\n    service = new MarvelService();\n    getChar = () => {\n        let {charId} = this.props\n        if(!charId){\n            return\n        }\n        this.setState({loading: true})\n        this.service\n        .getCharacter(charId)\n        .then(res => {\n            this.onLoaded(res)\n            clearInterval(this.interval)\n            })\n        .catch(this.onError)   \n    }\n    onLoaded = (res) => {\n        this.setState({\n                char: res,\n                loading: false,\n                error: false});\n    }\n    componentDidMount(){\n        this.getChar();\n        this.handleScroll();\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(this.props.charId !== prevProps.charId){\n            this.getChar()\n        }\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n        this.interval = setInterval(this.getChar(), 10000)   \n    }\n    handleScroll = () => {\n        window.addEventListener('scroll', (e) => { \n               this.setState({top: document.documentElement.scrollTop});                \n        }\n        )}\n    render(){\n        let {char, loading, error} = this.state;\n        let skeleton = error || loading || char ? null : <Skeleton/>\n        let errorMessage = error ? <ErrorMessage/> : null;\n        let loadMessage = loading ? <Spinner/> : null;\n        let content = !(error || loading || !char) ? this.view(char) : null;\n        return (\n        <div className=\"char__info\" style={{top: `${this.state.top}px`}}>\n            {skeleton}\n            {errorMessage}\n            {loadMessage}\n            {content}\n        </div>\n    )\n    }\nview = (char) => {\n    const {name, description, thumbnail, wiki, homepage, comics} = char;\n    let className = \"char__basics\";\n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n                className = \"char__basics char__basics-fill\";\n            }; \n    let comicsList = comics.map((i, n) => { \n        if (n > 9) return;\n        return (<li className=\"char__comics-item\"\n                    key={n}>\n                        {i.name}\n                </li>)})\n    return (\n        <>\n        <div className={className}>\n            <img src={thumbnail} alt=\"abyss\"/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n             {!comics.length ? `no comics with ${name}` : comicsList }\n            </ul>\n            </>\n    )\n}\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n};\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false,    \r\n    }\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.error){\r\n            return(\r\n                <ErrorMessage/>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/arrowup.27ec1212.png\";","import { Component } from \"react/cjs/react.production.min\";\r\nimport arrow from '../../resources/img/arrowup.png';\r\nimport './onTop.sass'\r\nclass OnTop extends Component {\r\n    state = {\r\n        position: false,\r\n    }\r\n    componentDidMount(){\r\n        this.scroll();\r\n    }\r\n    scroll = () => {\r\n        window.addEventListener('scroll', () => {\r\n            if(document.documentElement.scrollTop >= 300){\r\n                this.setState({position: 'show'})\r\n            }\r\n            if(document.documentElement.scrollTop <= 300){\r\n                this.setState({position: false})\r\n            }\r\n        }) \r\n    }\r\n    scrollUp = () => {\r\n            this.interval = setInterval(() => {\r\n                if(document.documentElement.scrollTop === 0){\r\n                clearInterval(this.interval);\r\n            } \r\n                document.documentElement.scrollTop -= 6\r\n            }, 5)\r\n    }\r\n    render(){\r\n      return(\r\n        <img src={arrow} alt=\"UP\" className = {`arrow ${this.state.position}`} onClick={() => this.scrollUp()}/>\r\n      )  \r\n    }\r\n}\r\nexport default OnTop;","import { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport decoration from '../../resources/img/vision.png';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport OnTop from \"../onTop/OnTop\";\nclass App extends Component {\n    state = {\n        showRandom: true,\n        buttonText: true,\n        selectedChar: null,\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id,\n        })\n    }\n    hiddenRandom = () => {\n        this.setState({\n            showRandom: !this.state.showRandom,\n            buttonText: !this.state.buttonText\n        })\n    }\n    render(){\n        let {showRandom, buttonText, selectedChar} = this.state\n        return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                {showRandom ? <RandomChar/> : null}\n                <button onClick={this.hiddenRandom}>{buttonText ? 'Hidden' : 'Show'}</button>\n                <div className=\"char__content\">\n                    <CharList\n                        onCharSelected = {this.onCharSelected}\n                        selectedChar = {this.state.selectedChar}/>\n                    <ErrorBoundary>\n                       <CharInfo charId = {selectedChar}/> \n                    </ErrorBoundary>\n                    <OnTop/>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n    }\n}\n    \n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n\n"],"sourceRoot":""}